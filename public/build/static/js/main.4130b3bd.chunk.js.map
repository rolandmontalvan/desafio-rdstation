{"version":3,"sources":["components/LaunchItem.js","components/Launches.js","components/Launch.js","logo.png","components/Navbar.js","components/Rocket.js","App.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","launchesQuery","gql","Launches","useQuery","loading","error","data","console","log","launches","map","LAUNCH_QUERY","Launch","props","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Navbar","href","src","logo","width","height","alt","ROCKET_QUERY","Rocket","wikipedia","description","target","rel","client","ApolloClient","uri","cache","InMemoryCache","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4130b3bd.chunk.js","sourcesContent":["import React from 'react'\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nexport default function LaunchItem({\n    launch:{ flight_number, mission_name, launch_date_local, launch_success }\n}) {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: {' '}\n                        <span className={classNames({\n                            'text-success': launch_success,\n                            'text-danger': !launch_success}\n                        )}>{mission_name}</span></h4>\n                    <p>Date: <Moment format=\"dddd, MMMM Do YYYY, h:mm a\">{launch_date_local}</Moment></p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">Launch Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport LaunchItem from './LaunchItem';\n\nconst launchesQuery = gql`\n    {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`;\n\nconst Launches = () => {\n    const { loading, error, data } = useQuery(launchesQuery);\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n\n    console.log(data)\n    return (\n        <>\n            <h1 className=\"display-4 my-3\">Launches</h1>\n            <div className=\"my-3\">\n                <p><span className=\"px-3 mr-2 bg-success\" /> = Success</p>\n                <p><span className=\"px-3 mr-2 bg-danger\" /> = Fail</p>\n            </div>\n            {data.launches.map(launch => (\n                <LaunchItem key={launch.flight_number} launch={launch} />\n            ))}\n        </>\n    )\n}\n\nexport default Launches\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\nquery LaunchQuery($flight_number: Int!) {\n    launch(flight_number: $flight_number) {\n        flight_number\n        mission_name\n        launch_year\n        launch_success\n        launch_date_local\n        rocket {\n            rocket_id\n            rocket_name\n            rocket_type\n        }\n    }\n}\n`;\n\nconst Launch = (props) => {\n    let { flight_number } = props.match.params;\n    flight_number = parseInt(flight_number);\n\n    const { loading, error, data } = useQuery(LAUNCH_QUERY, { variables: { flight_number } });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.log(data)\n\n    const { mission_name, launch_year, launch_success,\n        rocket: { rocket_id, rocket_name, rocket_type } } = data.launch;\n\n    return (\n        <div>\n            <h1 className=\"display-4 my-3\">\n                <span className=\"text-dark\">Mission:</span> {mission_name}\n            </h1>\n            <h4 className=\"mb-3\">Launch Details</h4>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Flight Number: {data.launch.flight_number}</li>\n                <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                <li className=\"list-group-item\">\n                    Launch Successful:{' '}\n                    <span className={classNames({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                    })}>\n                        {launch_success ? 'Yes' : 'No'}\n                    </span>\n                </li>\n            </ul>\n            <h4 className=\"my-3\">Rocket Details</h4>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\n                <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n            </ul>\n            <hr />\n            <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n        </div>\n    )\n}\n\nexport default Launch\n","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import React from 'react';\nimport logo from '../../src/logo.png';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar() {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">\n                <img src={logo} width=\"250\" height=\"35\"\n                    className=\"d-inline-block align-top\" alt=\"SpaceX FanClub\" />\n            </a>\n            <ul className=\"nav justify-content-center\">\n                <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link font-weight-bold\">Home</Link>\n                </li>\n            </ul>\n        </nav>\n\n    )\n}\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport { Link } from 'react-router-dom';\n\nconst ROCKET_QUERY = gql`\n    query rocket_query($rocket_id: String!){\n        rocket(rocket_id: $rocket_id){\n            rocket_id\n            rocket_name\n            rocket_type\n            wikipedia\n            description\n        }\n    }\n`;\n\n\nconst Rocket = (props) => {\n    let { rocket_id } = props.match.params;\n\n    const { loading, error, data } = useQuery(ROCKET_QUERY, { variables: { rocket_id } });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.log(data)\n\n    const { rocket_name, rocket_type, wikipedia, description } = data.rocket;\n\n    return (\n        <div>\n            <h1 className=\"display-4 my-3\">\n                <span className=\"text-dark\">Rocket:</span> {rocket_name}\n            </h1>\n            <h4 className=\"mb-3\">Rocket Details</h4>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Type:{' '}\n                    <span className=\"text-success font-weight-bold\">{rocket_type}</span>\n                </li>\n                <li className=\"list-group-item\">Wiki:{' '}\n                    <a href={wikipedia} target=\"_blank\" rel=\"noopener noreferrer\">\n                        Read more about {rocket_name} on Wikipedia!\n                </a>\n                </li>\n                <li className=\"list-group-item\">Description:{' '}\n                    <span className=\"text-success font-weight-bold\">{description}</span>\n                </li>\n            </ul>\n            <hr />\n            <Link to=\"/rockets\" className=\"btn btn-secondary\">Back</Link>\n        </div>\n    )\n}\n\nexport default Rocket\n","import React from 'react'\nimport './App.css';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport Navbar from './components/Navbar';\nimport Rocket from './components/Rocket';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nconst client = new ApolloClient({\n    uri: '/graphql',\n    cache: new InMemoryCache()\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <Navbar />\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\" component={Launch} />\n          <Route exact path=\"/rockets/:rocket_id\" component={Rocket} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}